git clone url

git log

q

Exiting git log
To stop viewing git log output, press q (which stands for quit).

git diff 1 2

q

git config --global color.ui auto

git checkout 1

git init # to create a repository

git status # the status of the working directory

git add 1 # add file the staging area

git commit
git commit -m "Commit message"

git diff # difference between working directory and staging area
git diff —-staged # difference between staging area and repository

git reset —-hard # remove everything in working directory and staging area. You can’t get the changes back

git checkout master

git branch
git branch no-class
git branch

git checkout no-class

git log --graph --oneline master coins

git checkout -b new_branch_name
git branch new_branch_name
git checkout new_branch_name

git gc #collect useless commits，回收没用的commit

git checkout branch1
git merge branch2
git merge branch1 branch2

git branch -m new-name

git show 1
git diff commit1 commit2

git branch -d 2

git log --graph --oneline

You might want to use pencil and paper, or create a text file with stars and dashes similar to the output of git log --graph, or maybe use an online diagramming tool like gliffy or yUML. 

git checkout easy-mode
git merge master easy-mode

<<<<<<< HEAD
||||||| merged common ancestors
=======
      this.breakIntoFragments();
>>>>>>> master

git add …
git commit

git status
both modified

git log -n 1
#git log will only show n commits (in this case it is 1 commit)

git diff branch1 branch2 #?
git log branch1 #?

git remote
git remote add origin https://github.com/arfu2016/handlehand.git
git remote add upstream …

git remote -v #check the remote repository

git push origin master

git branch
git remote
git pull origin master
git log

git pull origin master
git fetch origin
git merge master origin/master

git remote set-url origin git://new.url.here

git rm file
Use git rm foo to stage the file for deletion
